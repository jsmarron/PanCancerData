disp('Running MATLAB script file PanCan4.m') ;
%
%    Explores example for OODA book
%    Aimed at showing DWD directions give much better class
%        separation than PCA directions
%
%    Uses Data from PanCan3
%        with randomly reduced sample sizes for computational speed
%
%    PanCan3 was about:
%    For analysis of TCGA PanCan data set from Chris Fan
%    12 Cancer Types
%
%    Goals of this third analysis:
%        - Focus on subset of cases:  BLCA,KIRC,LUAD,LUSC,HNSC,BRCA, 
%                    thus eliminating  LAML,GBM,OV,UCEC,READ,COAD
%        - Repeat previous analyses
%        - Do pairwise analyses
%
%    Main input files are:  PanCan1.mat  &  PanCan1A.mat
%    Which were generated by PanCan1.m
%
%    That was based on:     kviao.pancan12tu.txt
%        Note 1st three lines have text:
%            - Long names
%            - Cancer Type
%            - Platform
%        Remaining lines 4 - 12485 are Gene Expression
%
%    PanCan1.mat contains:
%        mdata:         Matrix of Gene Expression
%        caGeneName:    Cell Array of Gene Names
%        caCLID         Cell Array of Case identifiers
%        caCanType      Cell Array of Cancer Types
%        caPlatform     Cell Array of Platforms
%
%    PanCan1A.mat contains:
%        mdatan:         Matrix of Gene Expression, where:
%                             Missings have been replaced by 0
%                             Negatives have been floored to 0
%                             Each gene has been median centered 
%                                 (w/ respect to 12 classes)
%
%    Here, the cases BLCA,KIRC,LUAD,LUSC,HNSC,BRCA
%        were first explored, as iparts 1,2,3,4 
%        but this did not give great example
%
%    Hence for iparts 11,12,13,14  explored cases GBM,KIRC,OV,HNSC,LUAD,BRCA
%
%    It seemed that example could also be improved,
%    hence for  iparts 21,22,23,24  explored cases BLCA, KIRC, OV, HNSC, COAD, BRCA
%


ipart = 24 ;    %  1 - Visualize reduced data:  MargDist plots & PCA Scatterplots
               %  2 - Explore all MD & DWD directions
               %  3 - Compute all pairwise DiProPerms 
               %  4 - Make main graphics and save data into file
               %
               %      For cases GBM,KIRC,OV,HNSC,LUAD,BRCA
               %  11 - Visualize reduced data:  MargDist plots & PCA Scatterplots
               %  12 - Explore all MD & DWD directions
               %  13 - Compute all pairwise DiProPerms 
               %  14 - Make main graphics and save data into file
               %
               %      For cases BLCA,KIRC,OV,HNSC,COAD,BRCA
               %  21 - Visualize reduced data:  MargDist plots & PCA Scatterplots
               %  22 - Explore all MD & DWD directions
               %  23 - Compute all pairwise DiProPerms 
               %  24 - Make main graphics and save data into file
               %
               %      For cases KIRC,OV,HNSC,BRCA
               %  31 - Visualize reduced data:  MargDist plots & PCA Scatterplots
               %  34 - Make main graphics and save data into file


savefilestr = 'PanCan1.mat' ;
savefileAstr = 'PanCan1A.mat' ;
    %  Actually these are for file reading

disp(' ') ;
disp('    Start 1st .mat file read') ;
load(savefilestr) ;
%    Loads Variables:
%        mdata:         Matrix of Gene Expression
%        caGeneName:    Cell Array of Gene Names
%        caCLID         Cell Array of Case identifiers
%        caCanType      Cell Array of Cancer Types
%        caPlatform     Cell Array of Platforms

mdata = [] ;
    %  to save space, since work only with normalized data here 

disp('    Start .mat file read') ;
load(savefileAstr) ;
%    Loads Variable:
%        mdatan:         Matrix of Gene Expression

disp('   Data loading finished') ;


%  Reduce to 6 types
%
nall = size(mdatan,2) ;
mcolorbase = RainbowColorsQY(6) ;
if ipart < 10 ;
  caCTnamebase = {'BLCA' 'KIRC' 'LUAD' 'LUSC' 'HNSC' 'BRCA'} ;

  vBLCAflagall = zeros(1,nall) ;
  vKIRCflagall = zeros(1,nall) ;
  vLUADflagall = zeros(1,nall) ;
  vLUSCflagall = zeros(1,nall) ;
  vHNSCflagall = zeros(1,nall) ;
  vBRCAflagall = zeros(1,nall) ;
  mcolorall = zeros(nall,3) ;
  markerstrall = [] ;

  for i = 1:nall ;
    if strcmp(caCanType{i},'BLCA') ;
      vBLCAflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(1,:) ;
      markerstrall = strvcat(markerstrall,'s') ;
    elseif strcmp(caCanType{i},'KIRC') ;
      vKIRCflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(2,:) ;
      markerstrall = strvcat(markerstrall,'d') ;
    elseif strcmp(caCanType{i},'LUAD') ;
      vLUADflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(3,:) ;
      markerstrall = strvcat(markerstrall,'x') ;
    elseif strcmp(caCanType{i},'LUSC') ;
      vLUSCflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(4,:) ;
      markerstrall = strvcat(markerstrall,'*') ;
    elseif strcmp(caCanType{i},'HNSC') ;
      vHNSCflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(5,:) ;
      markerstrall = strvcat(markerstrall,'+') ;
    elseif strcmp(caCanType{i},'BRCA') ;
      vBRCAflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(6,:) ;
      markerstrall = strvcat(markerstrall,'o') ;
    else ;
      markerstrall = strvcat(markerstrall,'.') ;
      disp(['    Skipping Type ' caCanType{i}]) ;
    end ;
  end ;
  vBLCAflagall = logical(vBLCAflagall) ;
  vKIRCflagall = logical(vKIRCflagall) ;
  vLUADflagall = logical(vLUADflagall) ;
  vLUSCflagall = logical(vLUSCflagall) ;
  vHNSCflagall = logical(vHNSCflagall) ;
  vBRCAflagall = logical(vBRCAflagall) ;
  vkeepflag = vBLCAflagall|vKIRCflagall|vLUADflagall|vLUSCflagall|vHNSCflagall|vBRCAflagall ;

  n = sum(vkeepflag) ;
  vBLCAflag = vBLCAflagall(vkeepflag) ;
  vKIRCflag = vKIRCflagall(vkeepflag) ;
  vLUADflag = vLUADflagall(vkeepflag) ;
  vLUSCflag = vLUSCflagall(vkeepflag) ;
  vHNSCflag = vHNSCflagall(vkeepflag) ;
  vBRCAflag = vBRCAflagall(vkeepflag) ;
  mCTflag = [vBLCAflag; ...
             vKIRCflag; ...
             vLUADflag; ...
             vLUSCflag; ...
             vHNSCflag; ...
             vBRCAflag] ;

elseif ipart < 20 ;

  caCTnamebase = {'GBM' 'KIRC' 'OV' 'HNSC' 'LUAD' 'BRCA'} ;

  vGBMflagall = zeros(1,nall) ;
  vKIRCflagall = zeros(1,nall) ;
  vOVflagall = zeros(1,nall) ;
  vHNSCflagall = zeros(1,nall) ;
  vLUADflagall = zeros(1,nall) ;
  vBRCAflagall = zeros(1,nall) ;
  mcolorall = zeros(nall,3) ;
  markerstrall = [] ;

  for i = 1:nall ;
    if strcmp(caCanType{i},'GBM') ;
      vGBMflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(1,:) ;
      markerstrall = strvcat(markerstrall,'s') ;
    elseif strcmp(caCanType{i},'KIRC') ;
      vKIRCflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(2,:) ;
      markerstrall = strvcat(markerstrall,'d') ;
    elseif strcmp(caCanType{i},'OV') ;
      vOVflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(3,:) ;
      markerstrall = strvcat(markerstrall,'x') ;
    elseif strcmp(caCanType{i},'HNSC') ;
      vHNSCflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(4,:) ;
      markerstrall = strvcat(markerstrall,'*') ;
    elseif strcmp(caCanType{i},'LUAD') ;
      vLUADflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(5,:) ;
      markerstrall = strvcat(markerstrall,'+') ;
    elseif strcmp(caCanType{i},'BRCA') ;
      vBRCAflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(6,:) ;
      markerstrall = strvcat(markerstrall,'o') ;
    else ;
      markerstrall = strvcat(markerstrall,'.') ;
      disp(['    Skipping Type ' caCanType{i}]) ;
    end ;
  end ;
  vGBMflagall = logical(vGBMflagall) ;
  vKIRCflagall = logical(vKIRCflagall) ;
  vOVflagall = logical(vOVflagall) ;
  vHNSCflagall = logical(vHNSCflagall) ;
  vLUADflagall = logical(vLUADflagall) ;
  vBRCAflagall = logical(vBRCAflagall) ;
  vkeepflag = vGBMflagall|vKIRCflagall|vOVflagall|vHNSCflagall|vLUADflagall|vBRCAflagall ;

  n = sum(vkeepflag) ;
  vGBMflag = vGBMflagall(vkeepflag) ;
  vKIRCflag = vKIRCflagall(vkeepflag) ;
  vOVflag = vOVflagall(vkeepflag) ;
  vHNSCflag = vHNSCflagall(vkeepflag) ;
  vLUADflag = vLUADflagall(vkeepflag) ;
  vBRCAflag = vBRCAflagall(vkeepflag) ;
  mCTflag = [vGBMflag; ...
             vKIRCflag; ...
             vOVflag; ...
             vHNSCflag; ...
             vLUADflag; ...
             vBRCAflag] ;

elseif ipart < 30 ;

  caCTnamebase = {'BLCA' 'KIRC' 'OV' 'HNSC' 'COAD' 'BRCA'} ;

  vBLCAflagall = zeros(1,nall) ;
  vKIRCflagall = zeros(1,nall) ;
  vOVflagall = zeros(1,nall) ;
  vHNSCflagall = zeros(1,nall) ;
  vCOADflagall = zeros(1,nall) ;
  vBRCAflagall = zeros(1,nall) ;
  mcolorall = zeros(nall,3) ;
  markerstrall = [] ;

  for i = 1:nall ;
    if strcmp(caCanType{i},'BLCA') ;
      vBLCAflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(1,:) ;
      markerstrall = strvcat(markerstrall,'s') ;
    elseif strcmp(caCanType{i},'KIRC') ;
      vKIRCflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(2,:) ;
      markerstrall = strvcat(markerstrall,'d') ;
    elseif strcmp(caCanType{i},'OV') ;
      vOVflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(3,:) ;
      markerstrall = strvcat(markerstrall,'x') ;
    elseif strcmp(caCanType{i},'HNSC') ;
      vHNSCflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(4,:) ;
      markerstrall = strvcat(markerstrall,'*') ;
    elseif strcmp(caCanType{i},'COAD') ;
      vCOADflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(5,:) ;
      markerstrall = strvcat(markerstrall,'+') ;
    elseif strcmp(caCanType{i},'BRCA') ;
      vBRCAflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(6,:) ;
      markerstrall = strvcat(markerstrall,'o') ;
    else ;
      markerstrall = strvcat(markerstrall,'.') ;
      disp(['    Skipping Type ' caCanType{i}]) ;
    end ;
  end ;
  vBLCAflagall = logical(vBLCAflagall) ;
  vKIRCflagall = logical(vKIRCflagall) ;
  vOVflagall = logical(vOVflagall) ;
  vHNSCflagall = logical(vHNSCflagall) ;
  vCOADflagall = logical(vCOADflagall) ;
  vBRCAflagall = logical(vBRCAflagall) ;
  vkeepflag = vBLCAflagall|vKIRCflagall|vOVflagall|vHNSCflagall|vCOADflagall|vBRCAflagall ;

  n = sum(vkeepflag) ;
  vBLCAflag = vBLCAflagall(vkeepflag) ;
  vKIRCflag = vKIRCflagall(vkeepflag) ;
  vOVflag = vOVflagall(vkeepflag) ;
  vHNSCflag = vHNSCflagall(vkeepflag) ;
  vCOADflag = vCOADflagall(vkeepflag) ;
  vBRCAflag = vBRCAflagall(vkeepflag) ;
  mCTflag = [vBLCAflag; ...
             vKIRCflag; ...
             vOVflag; ...
             vHNSCflag; ...
             vCOADflag; ...
             vBRCAflag] ;

else ;

  caCTnamebase = {'KIRC' 'OV' 'HNSC' 'BRCA'} ;

  vKIRCflagall = zeros(1,nall) ;
  vOVflagall = zeros(1,nall) ;
  vHNSCflagall = zeros(1,nall) ;
  vBRCAflagall = zeros(1,nall) ;
  mcolorall = zeros(nall,3) ;
  markerstrall = [] ;

  for i = 1:nall ;
    if strcmp(caCanType{i},'KIRC') ;
      vKIRCflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(2,:) ;
      markerstrall = strvcat(markerstrall,'d') ;
    elseif strcmp(caCanType{i},'OV') ;
      vOVflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(3,:) ;
      markerstrall = strvcat(markerstrall,'x') ;
    elseif strcmp(caCanType{i},'HNSC') ;
      vHNSCflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(4,:) ;
      markerstrall = strvcat(markerstrall,'*') ;
    elseif strcmp(caCanType{i},'BRCA') ;
      vBRCAflagall(i) = 1 ;
      mcolorall(i,:) = mcolorbase(6,:) ;
      markerstrall = strvcat(markerstrall,'o') ;
    else ;
      markerstrall = strvcat(markerstrall,'.') ;
      disp(['    Skipping Type ' caCanType{i}]) ;
    end ;
  end ;
  vKIRCflagall = logical(vKIRCflagall) ;
  vOVflagall = logical(vOVflagall) ;
  vHNSCflagall = logical(vHNSCflagall) ;
  vBRCAflagall = logical(vBRCAflagall) ;
  vkeepflag = vKIRCflagall|vOVflagall|vHNSCflagall|vBRCAflagall ;

  n = sum(vkeepflag) ;
  vKIRCflag = vKIRCflagall(vkeepflag) ;
  vOVflag = vOVflagall(vkeepflag) ;
  vHNSCflag = vHNSCflagall(vkeepflag) ;
  vBRCAflag = vBRCAflagall(vkeepflag) ;
  mCTflag = [vKIRCflag; ...
             vOVflag; ...
             vHNSCflag; ...
             vBRCAflag] ;

end ;    %  of ipart if-block, separating 1-4, 11-14, 21-24, 31,34


mdatar = mdatan(:,vkeepflag') ;
mcolorr = mcolorall(vkeepflag,:) ;
markerstrr = markerstrall(vkeepflag) ;
d = size(mdatar,1) ;

mdatan = [] ; 
    %  to save space


%  Reduce sample sizes for computational speed
%
rng(97745431) ;
    %  seed for random selection
nmax = 50 ;
mdata = [] ;
mcolor = [] ;
markerstr = [] ;
vnCT = [] ;
for iCT = 1:length(caCTnamebase) ;

  vCTflag = mCTflag(iCT,:) ;
  nCT = sum(vCTflag) ;
  if nCT > nmax ;
    niCT = nmax ;
    vindkeep = 1:size(mdatar,2) ;
    vindkeep = vindkeep(vCTflag) ;
        %  indices of the nCT ones in vCTflag
    vind = randperm(nCT,nmax) ;
        %  random permutation of indices 1:nCT
    vindkeep = vindkeep(vind) ;
        %  keep random set of nmax of indices of nonzeros in vCTflag
    vCTflagkeep = zeros(1,n) ;
    vCTflagkeep(vindkeep) = ones(1,niCT) ;
        %  put ones into those entries
    vCTflagkeep = logical(vCTflagkeep) ;
  else ;
    vCTflagkeep = vCTflag ;
    niCT = nCT ;
  end ;

  mdata = [mdata mdatar(:,vCTflagkeep)] ;
  mcolor = [mcolor; mcolorr(vCTflagkeep',:)] ;
  markerstr = strvcat(markerstr,markerstrr(vCTflagkeep')) ;
  vnCT = [vnCT niCT] ;
  n = sum(vnCT) ;

end ;

nct = length(caCTnamebase) ;
mCTflag = zeros(length(caCTnamebase),n) ;
ipb = 0 ;
    %  index of end to previous block
for i = 1:length(caCTnamebase) ;
  mCTflag(i,(ipb + 1):(ipb + vnCT(i))) = ones(vnCT(i),1) ;
  ipb = ipb + vnCT(i) ;
end ;
mCTflag = logical(mCTflag) ;

mdatar = [] ; 
    %  to save space



if  ipart == 1  | ...
    ipart == 11  | ...
    ipart == 21  | ...
    ipart == 31  ;    %  Visualize reduced data:  MargDist plots & PCA Scatterplots

  %  Make Color Plot with Cancer Type Colors
  %
  figure(1) ;
  clf ;
  axis([0 1 0 1]) ;
  text(0.2,(nct + 1) / (nct + 2), ...
       'Type','Color','k','FontSize',24) ;
  text(0.5,(nct + 1) / (nct + 2), ...
       'n','Color','k','FontSize',24) ;
  text(0.8,(nct + 1) / (nct + 2), ...
       '%','Color','k','FontSize',24) ;
  for ict = 1:nct ;
    text(0.2,(nct - ict + 1) / (nct + 2), ...
         caCTnamebase{ict}, ...
         'Color',mcolorbase(ict,:), ...
         'FontSize',24) ;
    text(0.5,(nct - ict + 1) / (nct + 2), ...
         num2str(vnCT(ict)), ...
         'Color',mcolorbase(ict,:), ...
         'FontSize',24) ;
    text(0.8,(nct - ict + 1) / (nct + 2), ...
         num2str(100 * vnCT(ict) / n,3), ...
         'Color',mcolorbase(ict,:), ...
         'FontSize',24) ;
  end ;
  orient landscape ;
  savestr = ['PanCan4ip' num2str(ipart) 'CancerTypeColors-Counts'] ;
  print('-dpsc2',savestr) ;

  %  Make Mean MargDistPlot
  %
  figure(2) ;
  clf ;
  varnamecellstr = {caGeneName} ;
  titlecellstr = {{'Summary Stats (means)' ...
                   'Reduced Data Set, median centered' ...
                   ['n = ' num2str(n) '# genes, d = ' num2str(d)] ...
                   '7 smallest & 8 biggest'}} ;
  savestr = ['PanCan4ip' num2str(ipart) 'MargDistMean'] ;
  paramstruct = struct('istat',1, ...
                       'varnamecellstr',varnamecellstr, ...
                       'viplot',[(1:7), ((d - 7):d)], ...
                       'icolor',mcolor, ...
                       'markerstr',markerstr, ...
                       'isubpopkde',1, ...
                       'datovlaymax',0.9, ...
                       'datovlaymin',0.4, ...
                       'titlecellstr',titlecellstr, ...
                       'savestr',savestr) ;
  MargDistPlotSM(mdata,paramstruct) ;

  %  Make SD MargDistPlot
  %
  figure(3) ;
  clf ;
  varnamecellstr = {caGeneName} ;
  titlecellstr = {{'Summary Stats (SD)' ...
                   'Reduced Data Set, median centered' ...
                   ['n = ' num2str(n) '# genes, d = ' num2str(d)] ...
                   '7 smallest & 8 biggest'}} ;
  savestr = ['PanCan4ip' num2str(ipart) 'MargDistSD'] ;
  paramstruct = struct('istat',2, ...
                       'varnamecellstr',varnamecellstr, ...
                       'viplot',[(1:7), ((d - 7):d)], ...
                       'icolor',mcolor, ...
                       'markerstr',markerstr, ...
                       'isubpopkde',1, ...
                       'datovlaymax',0.9, ...
                       'datovlaymin',0.4, ...
                       'titlecellstr',titlecellstr, ...
                       'savestr',savestr) ;
  MargDistPlotSM(mdata,paramstruct) ;

  %  Make Skewness MargDistPlot
  %
  figure(4) ;
  clf ;
  varnamecellstr = {caGeneName} ;
  titlecellstr = {{'Summary Stats (Skewness)' ...
                   'Reduced Data Set, median centered' ...
                   ['n = ' num2str(n) '# genes, d = ' num2str(d)] ...
                   '7 smallest & 8 biggest'}} ;
  savestr = ['PanCan4ip' num2str(ipart) 'MargDistSkew'] ;
  paramstruct = struct('istat',3, ...
                       'varnamecellstr',varnamecellstr, ...
                       'viplot',[(1:7), ((d - 7):d)], ...
                       'icolor',mcolor, ...
                       'markerstr',markerstr, ...
                       'isubpopkde',1, ...
                       'datovlaymax',0.9, ...
                       'datovlaymin',0.4, ...
                       'titlecellstr',titlecellstr, ...
                       'savestr',savestr) ;
  MargDistPlotSM(mdata,paramstruct) ;

  %  Make Kurtosis MargDistPlot
  %
  figure(5) ;
  clf ;
  varnamecellstr = {caGeneName} ;
  titlecellstr = {{'Summary Stats (Kurtosis)' ...
                   'Reduced Data Set, median centered' ...
                   ['n = ' num2str(n) '# genes, d = ' num2str(d)] ...
                   '7 smallest & 8 biggest'}} ;
  savestr = ['PanCan4ip' num2str(ipart) 'MargDistKurt'] ;
  paramstruct = struct('istat',4, ...
                       'varnamecellstr',varnamecellstr, ...
                       'viplot',[1:15], ...
                       'icolor',mcolor, ...
                       'markerstr',markerstr, ...
                       'isubpopkde',1, ...
                       'datovlaymax',0.9, ...
                       'datovlaymin',0.4, ...
                      'titlecellstr',titlecellstr, ...
                       'savestr',savestr) ;
  MargDistPlotSM(mdata,paramstruct) ;

  %  PCA scatterplots, all together
  %
  figure(6) ;
  clf ;
  titlecellstr = {{'PanCan Gene Expression, 2013' ...
                   [num2str(size(mcolorbase,1)) 'Cancer Types'] ...
                   'Reduced Data Set, median centered' ...
                   ['n = ' num2str(n) '# genes, d = ' num2str(d)]}} ;
  labelcellstr = {{'PC 1 Scores' 'PC 2 Scores' 'PC 3 Scores' 'PC 4 Scores'}} ;
  savestr = ['PanCan4ip' num2str(ipart) 'AllDataPCA'] ;
  paramstruct = struct('npcadiradd',4, ...
                       'icolor',mcolor, ...
                       'markerstr',markerstr, ...
                       'isubpopkde',1, ...
                       'legendcellstr',{caCTnamebase}, ...
                       'mlegendcolor',mcolorbase, ...
                       'ibelowdiag',1, ...
                       'titlecellstr',titlecellstr, ...
                       'labelcellstr',labelcellstr, ...
                       'savestr',savestr, ...
                       'iscreenwrite',1) ;
  scatplotSM(mdata,[],paramstruct) ;

  if ipart < 30 ;

    figure(7) ;
    clf ;
    titlecellstr = {{'PanCan Gene Expression, 2013' ...
                     [num2str(size(mcolorbase,1)) 'Cancer Types'] ...
                     'Reduced Data Set, median centered' ...
                     ['n = ' num2str(n) '# genes, d = ' num2str(d)]}} ;
    labelcellstr = {{'PC 1 Scores' 'PC 2 Scores' 'PC 3 Scores'}} ;
    savestr = ['PanCan4ip' num2str(ipart) 'AllDataPCA3x3'] ;
    paramstruct = struct('npcadiradd',3, ...
                         'icolor',mcolor, ...
                         'markerstr',markerstr, ...
                         'isubpopkde',1, ...
                         'legendcellstr',{caCTnamebase}, ...
                         'mlegendcolor',mcolorbase, ...
                         'ibelowdiag',1, ...
                         'titlecellstr',titlecellstr, ...
                         'labelcellstr',labelcellstr, ...
                         'savestr',savestr, ...
                         'iscreenwrite',1) ;
    scatplotSM(mdata,[],paramstruct) ;

  else ;

    figure(7) ;
    clf ;
    titlecellstr = {{'PanCan Gene Expression, 2013' ...
                     [num2str(size(mcolorbase,1)) 'Cancer Types']}} ;
    labelcellstr = {{'PC 1 Scores' 'PC 2 Scores'}} ;
    savestr = ['PanCan4ip' num2str(ipart) 'AllDataPCA2x2'] ;
    paramstruct = struct('npcadiradd',2, ...
                         'icolor',mcolor, ...
                         'markerstr',markerstr, ...
                         'isubpopkde',1, ...
                         'legendcellstr',{caCTnamebase}, ...
                         'mlegendcolor',mcolorbase(1:4,:), ...
                         'ibelowdiag',1, ...
                         'titlecellstr',titlecellstr, ...
                         'labelcellstr',labelcellstr, ...
                         'savestr',savestr, ...
                         'iscreenwrite',1) ;
    scatplotSM(mdata,[],paramstruct) ;

  end ;

  %  Make some zoomed in plots
  %
  paramstruct = struct('npc',4, ...
                       'iorient',3, ...
                       'iscreenwrite',1, ...
                       'viout',[0 0 0 0 1]) ;
  outstruct = pcaSM(mdata,paramstruct) ;
  mpc = getfield(outstruct,'mpc') ;
      %  4 x n matrix of PC scores

  figure(8) ;
  clf ;
  savestr = ['PanCan4ip' num2str(ipart) 'AllData-PC1v2'] ;
  paramstruct = struct('icolor',mcolor, ...
                       'markerstr',markerstr, ...
                       'titlestr','Zoomed in PanCan Reduced', ...
                       'xlabelstr','PC 2 Scores', ...
                       'ylabelstr','PC 1 Scores', ...
                       'legendcellstr',{caCTnamebase}, ...
                       'mlegendcolor',mcolorbase, ...
                       'ifigure',7, ...
                       'savestr',savestr, ...
                       'iscreenwrite',1) ;
  projplot2SM(mpc,[[0; 1; 0; 0],[1; 0; 0; 0]],paramstruct) ;

  figure(9) ;
  clf ;
  savestr = ['PanCan4ip' num2str(ipart) 'AllData-PC3v4'] ;
  paramstruct = struct('icolor',mcolor, ...
                       'markerstr',markerstr, ...
                       'titlestr','Zoomed in PanCan Reduced', ...
                       'xlabelstr','PC 4 Scores', ...
                       'ylabelstr','PC 3 Scores', ...
                       'legendcellstr',{caCTnamebase}, ...
                       'mlegendcolor',mcolorbase, ...
                       'ifigure',8, ...
                       'savestr',savestr, ...
                       'iscreenwrite',1) ;
  projplot2SM(mpc,[[0; 0; 0; 1],[0; 0; 1; 0]],paramstruct) ;



elseif  ipart == 2  | ...
        ipart == 12  | ...
        ipart == 22  ;    %  Explore all MD & DWD directions

  for iCT = 2:6 ;

    mdatai = mdata(:,mCTflag(iCT,:)) ;
    mcolori = mcolor(mCTflag(iCT,:)',:) ;
    markerstri = markerstr(mCTflag(iCT,:)) ;
    CTstri = caCTnamebase{iCT} ;

    for jCT = 1:(iCT - 1) ;

      mdataj = mdata(:,mCTflag(jCT,:)) ;
      mcolorj = mcolor(mCTflag(jCT,:)',:) ;
      markerstrj = markerstr(mCTflag(jCT,:)) ;
      CTstrj = caCTnamebase{jCT} ;

      disp(' ') ;
      disp(['    Comparing Type ' CTstri ' vs. ' CTstrj]) ;

      %  Compute the MD direction
      %
      MDdirn = mean(mdatai,2) - mean(mdataj,2) ;
      MDdirn = MDdirn / norm(MDdirn) ;

      %  Compute the DWD direction
      %
      DWDdirn = DWD2XQ(mdatai,mdataj) ;

      %  Make Scatplot Graphic
      %
      figure(1) ;
      clf ;
      titlecellstr = {{'PanCan, 2013' ...
                       [CTstri ' vs. ' CTstrj] ...
                       ['n_i = ' num2str(size(mdatai,2)) ...
                          ', n_j = ' num2str(size(mdataj,2)) ...
                          ', d = ' num2str(d)]}} ;
      labelcellstr = {{'MD scores' 'DWD scores' 'OPC 1 Scores'}} ;
      savestr = ['PanCan4ip' num2str(ipart) 'MDnDWD-' CTstri 'v' CTstrj] ;
      paramstruct = struct('npcadiradd',-1, ...
                           'icolor',[mcolori; mcolorj], ...
                           'isubpopkde',1, ...
                           'titlecellstr',titlecellstr, ...
                           'labelcellstr',labelcellstr, ...
                           'savestr',savestr, ...
                           'iscreenwrite',1) ;
      scatplotSM([mdatai mdataj],[MDdirn DWDdirn],paramstruct) ;


    end ;

  end ;


elseif  ipart == 3  | ...
        ipart == 13 | ...
        ipart == 23 ;    %  Compute all pairwise DiProPerms

  xlssavestr = ['PanCan4ip' num2str(ipart) 'DiProPermOutputs.xlsx'] ;
  if ipart > 10 ;
    xlssavestr = ['PanCan4ip' num2str(ipart) 'DiProPermOutputs-2ndPart.xlsx'] ;
  end ;
  xlswrite(xlssavestr,{'Output from PanCan4 - DiProPerm Results'},'DiProPerms','A1') ;
  xlswrite(xlssavestr,{'DWD Z-scores'},'DiProPerms','D3') ;
  xlswrite(xlssavestr,{'MD Z-scores'},'DiProPerms','K3') ;

  for iCT = 2:6 ;

    mdatai = mdata(:,mCTflag(iCT,:)) ;
    mcolori = mcolor(mCTflag(iCT,:)',:) ;
    markerstri = markerstr(mCTflag(iCT,:)) ;
    CTstri = caCTnamebase{iCT} ;

    xlswrite(xlssavestr,{CTstri},'DiProPerms',['A' num2str(iCT + 2)]) ;
    xlswrite(xlssavestr,{CTstri},'DiProPerms',['H' num2str(iCT + 2)]) ;

    for jCT = 1:(iCT - 1) ;

      mdataj = mdata(:,mCTflag(jCT,:)) ;
      mcolorj = mcolor(mCTflag(jCT,:)',:) ;
      markerstrj = markerstr(mCTflag(jCT,:)) ;
      CTstrj = caCTnamebase{jCT} ;

      if jCT == 1 ;
        XLlet1 = 'B' ;
        XLlet2 = 'I' ;
      elseif jCT == 2 ;
        XLlet1 = 'C' ;
        XLlet2 = 'J' ;
      elseif jCT == 3 ;
        XLlet1 = 'D' ;
        XLlet2 = 'K' ;
      elseif jCT == 4 ;
        XLlet1 = 'E' ;
        XLlet2 = 'L' ;
      elseif jCT == 5 ;
        XLlet1 = 'F' ;
        XLlet2 = 'M' ;
      end ;
      xlswrite(xlssavestr,{CTstrj},'DiProPerms',[XLlet1 '9']) ;
      xlswrite(xlssavestr,{CTstrj},'DiProPerms',[XLlet2 '9']) ;

      disp(' ') ;
      disp(['    DiProPerms for Types ' CTstri ' vs. ' CTstrj]) ;

      %  Make DiProPerm Graphic
      %
      figure(1) ;
      clf ;
      axh11 = subplot(2,2,1) ;
      axh12 = subplot(2,2,2) ;
      axh21 = subplot(2,2,3) ;
      axh22 = subplot(2,2,4) ;
      savestr = ['PanCan4ip' num2str(ipart) 'DiProPerms-' CTstri 'v' CTstrj] ;
      paramstruct = struct('mctl',[[1 2]; [2 2]], ...
                           'vaxh',[[axh11 axh12]; [axh21 axh22]], ...
                           'ishowperm',0, ...
                           'nsim',100, ...
                           'nreport',10, ...
                           'icolor',[mcolori(1,:); mcolorj(1,:)], ...
                           'markerstr',[markerstri(1); markerstrj(1)], ...
                           'title1str',[CTstri ' vs. ' CTstrj], ...
                           'savestr',savestr, ...
                           'iscreenwrite',1) ;
      [stat,pval,zscore] = DiProPermSM(mdatai,mdataj,paramstruct) ;

      xlswrite(xlssavestr,zscore(1),'DiProPerms',[XLlet1 num2str(iCT + 2)]) ;
      xlswrite(xlssavestr,zscore(2),'DiProPerms',[XLlet2 num2str(iCT + 2)]) ;


    end ;

  end ;


elseif  ipart == 4  | ...
        ipart == 14  | ...
        ipart == 24  | ...
        ipart == 34  ;    %  Make main graphics and save data into file

  if ipart < 10 ;
    mind = [[4 2]; [3 1]; [6 5]] ;
        %caCTnamebase = {'BLCA' 'KIRC' 'LUAD' 'LUSC' 'HNSC' 'BRCA'} ;
  elseif ipart < 20 ;
    mind = [[5 3]; [4 1]; [6 2]] ;
        %caCTnamebase = {'GBM' 'KIRC' 'OV' 'HNSC' 'LUAD' 'BRCA'} ;
  elseif ipart < 30 ;
    mind = [[4 2]; [1 5]; [6 3]] ;
        %caCTnamebase = {'BLCA' 'KIRC' 'OV' 'HNSC' 'COAD' 'BRCA'} ;
  else ;
    mind = [[1 3]; [4 2]] ;
        %caCTnamebase = {'KIRC' 'OV' 'HNSC' 'BRCA'} ;
  end ;

  %  Compute Directions etc.
  %
  mDWDdirn = [] ;
  for irow = 1:size(mind,1) ;

    DWDdirn = DWD2XQ(mdata(:,mCTflag(mind(irow,1),:)), ...
                     mdata(:,mCTflag(mind(irow,2),:))) ;
    mDWDdirn = [mDWDdirn DWDdirn] ;

  end ;

  %  Make Main Scatterplot
  %
  figure(1) ;
  clf ;
  titlecellstr = {{'PanCan, 2013' ...
                   'Random Subsets' ...
                   'Pairwise DWD Directions' ...
                   ['n = ' num2str(size(mdata,2)) ...
                    ', d = ' num2str(d)]}} ;
  if ipart > 30 ;
    labelcellstr = {{[caCTnamebase{mind(1,1)} ' vs. ' caCTnamebase{mind(1,2)}]; ...
                     [caCTnamebase{mind(2,1)} ' vs. ' caCTnamebase{mind(2,2)}]}} ;
    mlegendcolor = mcolorbase(1:4,:) ;
  else ;
    labelcellstr = {{[caCTnamebase{mind(1,1)} ' vs. ' caCTnamebase{mind(1,2)}]; ...
                     [caCTnamebase{mind(2,1)} ' vs. ' caCTnamebase{mind(2,2)}]; ...
                     [caCTnamebase{mind(3,1)} ' vs. ' caCTnamebase{mind(3,2)}]}} ;
    mlegendcolor = mcolorbase ;
  end ;
  savestr = ['PanCan4ip' num2str(ipart) 'DWDdrivenScatPlot'] ;
  paramstruct = struct('npcadiradd',0, ...
                       'icolor',mcolor, ...
                       'markerstr',markerstr, ...
                       'isubpopkde',1, ...
                       'titlecellstr',titlecellstr, ...
                       'labelcellstr',labelcellstr, ...
                       'legendcellstr',{caCTnamebase}, ...
                       'mlegendcolor',mlegendcolor, ...
                       'savestr',savestr, ...
                       'iscreenwrite',1) ;
  scatplotSM(mdata,mDWDdirn,paramstruct) ;



end ;


